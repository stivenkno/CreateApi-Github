{
	"info": {
		"_postman_id": "5cc7fd7a-8e60-4b66-9935-ecc31bb8b484",
		"name": "Github-API-tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "36729210"
	},
	"item": [
		{
			"name": "getUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 for getUser\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response body should have username\", function () {",
							"    pm.expect(pm.response.json()).to.have.property(\"username\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{local_url}}/api/github/user/octocat?",
					"host": [
						"{{local_url}}"
					],
					"path": [
						"api",
						"github",
						"user",
						"octocat"
					],
					"query": [
						{
							"key": "",
							"value": null
						}
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "getRepos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 for getRepos\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response body should be an array\", function () {",
							"    pm.expect(pm.response.json()).to.be.an(\"array\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{local_url}}/api/github/user/MateoMor/repos?sort=updated&direction=desc",
					"host": [
						"{{local_url}}"
					],
					"path": [
						"api",
						"github",
						"user",
						"MateoMor",
						"repos"
					],
					"query": [
						{
							"key": "sort",
							"value": "updated"
						},
						{
							"key": "direction",
							"value": "desc"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getRepoDetails",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 for getRepoDetails\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response body should have repo details\", function () {",
							"    pm.expect(pm.response.json()).to.have.property(\"name\");",
							"    pm.expect(pm.response.json()).to.have.property(\"html_url\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{local_url}}}/api/github/user/sandmor/repos/reacto"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		},
		{
			"key": "local_url",
			"value": "http://localhost:3001"
		}
	]
}